generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model book_images {
  id      Int     @id @default(autoincrement())
  book_id Int?
  url     String? @db.VarChar(255)
  books   books?  @relation(fields: [book_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "book_images_ibfk_2")

  @@index([book_id], map: "book_id")
}

model books {
  id              Int           @id @default(autoincrement())
  title           String        @db.VarChar(255)
  author          String?       @db.VarChar(255)
  description     String?       @db.MediumText
  price           Decimal?      @db.Decimal(10, 2)
  import_price    Decimal?      @db.Decimal(10, 2)
  stock           Int?
  discount_id     Int?
  sold            Int?
  status          Int?          @db.TinyInt
  is_featured     Boolean?
  is_new          Boolean?
  pages           Int?
  publish_year    Int?
  weight          Decimal?      @db.Decimal(10, 2)
  size            String?       @db.VarChar(50)
  category_id     Int?
  publisher_id    Int?
  sale_start_date DateTime      @default(now()) @db.Timestamp(0)
  book_images     book_images[]
  discounts       discounts?    @relation(fields: [discount_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "books_ibfk_1")
  publishers      publishers?   @relation(fields: [publisher_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "books_ibfk_2")
  categories      categories?   @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "books_ibfk_3")

  @@index([category_id], map: "category_id")
  @@index([discount_id], map: "discount_id")
  @@index([publisher_id], map: "publisher_id")
}

model categories {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  slug        String  @db.VarChar(255)
  description String? @db.MediumText
  books       books[]
}

model discounts {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  code       String?  @db.VarChar(50)
  percent    Decimal? @db.Decimal(5, 2)
  start_date DateTime @default(now()) @db.Timestamp(0)
  end_date   DateTime @default(dbgenerated("('0000-00-00 00:00:00')")) @db.Timestamp(0)
  books      books[]
}

model publishers {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  slug        String  @db.VarChar(255)
  description String? @db.MediumText
  address     String? @db.MediumText
  image       String? @db.VarChar(255)
  books       books[]
}

model reviews {
  id      Int     @id @default(autoincrement())
  book_id Int?
  user_id Int?
  rating  Int?
  comment String? @db.MediumText

  @@index([book_id], map: "book_id")
  @@index([user_id], map: "user_id")
}
