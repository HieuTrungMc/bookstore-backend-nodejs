generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id          Int           @id @default(autoincrement())
  username    String        @db.VarChar(255)
  password    String        @db.VarChar(255)
  name        String?       @db.VarChar(255)
  email       String?       @db.VarChar(255)
  avatar      String?       @db.VarChar(255)
  status      Int?          @db.TinyInt
  role        String?       @default("member") @db.VarChar(50)
  addresses   addresses[]
  attachments attachments[]
  posts       posts[]
}

model addresses {
  id             Int     @id @default(autoincrement())
  user_id        Int?
  address        String? @db.MediumText
  receiver_name  String? @db.VarChar(255)
  receiver_phone String? @db.VarChar(20)
  user           users?  @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "addresses_ibfk_1")

  @@index([user_id], map: "user_id")
}

model posts {
  id         Int           @id @default(autoincrement())
  title      String        @db.VarChar(100)
  slug       String        @db.VarChar(255)
  content    String        @db.Text
  category   String?       @db.VarChar(100)
  created_at DateTime?     @default(now()) @db.Timestamp(0)
  updated_at DateTime?     @db.Timestamp(0)
  status     posts_status? @default(draft)
  user_id    Int?
  users      users?        @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "posts_ibfk_1")

  @@index([user_id], map: "user_id")
}

model attachments {
  id         Int      @id @default(autoincrement())
  user_id    Int
  file_name  String   @db.VarChar(255)
  file_url   String   @db.VarChar(512)
  created_at DateTime @default(now()) @db.Timestamp(0)
  users      users    @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "attachments_ibfk_1")

  @@index([user_id], map: "user_id")
}

enum posts_status {
  published
  draft
}
